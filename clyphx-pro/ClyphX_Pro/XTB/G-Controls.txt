VERSION = v1.0.0

#********************************** [SETTINGS NOTES] **********************************

# Please DO NOT change any of the spacing in this file.

# Please DO NOT change the name of this file or its file extension.  When done making
# your changes to the settings below, just save the file.

# After saving this file, you will need to load a new Live Set/reload the
# current Live Set for your changes to take effect.


#********************************** [SETTINGS] *****************************************

# Below you can specify a list of MIDI Buttons to use as G-Controls as well as the Action
# Lists they should trigger when various gestures are received. The MIDI Buttons you
# specify here are expected to be momentary (send an on message when pressed and an
# off message when released).

# The entry format for each control is:
# NAME = TYPE, CHANNEL, NOTE_OR_CC, OFF_LED, ON_LED, REPEAT

# --------------------------------------------------------------------------------------
# | ENTRY      |  DESCRIPTION
# --------------------------------------------------------------------------------------
# | NAME       |  A unique one-word name for the control.
# --------------------------------------------------------------------------------------
# | TYPE       |  The type of MIDI message the control sends (NOTE or CC).
# --------------------------------------------------------------------------------------
# | CHANNEL    |  The MIDI Channel number in the range of 1-16.
# --------------------------------------------------------------------------------------
# | NOTE_OR_CC |  The Note or CC number in the range of 0-127.
# --------------------------------------------------------------------------------------
# | OFF_LED    |  The LED value in the range of 0-127 to use by default and when the
# |            |  control is not pressed down. If in doubt, use 0.
# --------------------------------------------------------------------------------------
# | ON_LED     |  The LED value in the range of 0-127 to use when the control is pressed
# |            |  down. If in doubt, use 127.
# --------------------------------------------------------------------------------------
# | REPEAT     |  TRUE or FALSE to indicate whether the control should repeatedly trigger
# |            |  an Action List when it's pressed down.
# --------------------------------------------------------------------------------------

# Example: MY_BTN1 = NOTE, 1, 10, 0, 127, TRUE


# After each control specification, you'll list the gestures you want to listen for and
# the Action List that should be triggered when the gesture is received.

# The entry format for each gesture is:
# NAME GESTURE_TYPE = ACTION_LIST

# --------------------------------------------------------------------------------------
# | ENTRY        |  DESCRIPTION
# --------------------------------------------------------------------------------------
# | NAME         |  The name specified for the control
# --------------------------------------------------------------------------------------
# | GESTURE_TYPE |  The type of gesture to listen for.  These types are listed below.
# --------------------------------------------------------------------------------------
# | ACTION_LIST  |  The Action List to trigger when the gesture is received.
# --------------------------------------------------------------------------------------

# Example: MY_BTN1 PRESSED = METRO


#******************************** [GESTURE TYPES] ***************************************

# --------------------------------------------------------------------------------------
# | TYPE                 |  DESCRIPTION
# --------------------------------------------------------------------------------------
# | PRESSED              |  Received when the control is pressed. The Action List
# |                      |  specified for this gesture is the one that will be repeated
# |                      |  when REPEAT is TRUE.
# --------------------------------------------------------------------------------------
# | PRESSED_DELAYED      |  Received when the control is pressed down for 500 ms or more.
# --------------------------------------------------------------------------------------
# | RELEASED             |  Received when the control is released. This will be received
# |                      |  any time the control is released and will be received before
# |                      |  the next two gesture types.
# --------------------------------------------------------------------------------------
# | RELEASED_IMMEDIATELY |  Received when the control is released after being pressed
# |                      |  down for less than 500 ms.
# --------------------------------------------------------------------------------------
# | RELEASED_DELAYED     |  Received when the control is released after being pressed
# |                      |  down for 500 ms or more.
# --------------------------------------------------------------------------------------

# Below is an example list that has been commented out (the # at the beginning of
# a line makes the line a comment). Your list should be formatted in the same way
# except without the # at the beginning of each line.

# B1 = NOTE, 9, 9, 25, 52, FALSE
# B1 PRESSED = MUTE
# B1 RELEASED_DELAYED = MUTE

# B2 = CC, 1, 1, 0, 127, TRUE
# B2 PRESSED = VOL <5
# B2 RELEASED = VOL RESET


# When using long Action Lists, it's possible to split the Action List up over multiple
# lines.  This requires that each additional line is indented by 1 space.

# B1 PRESSED = MON;
#  ARM;
#  NAME "My Track"

# --------------------------------------------------------------------------------------

# Traktor TSI v3.0 - XTB (KORG nanoKONTROL Studio) - G-Controls
# CC numbers reference those assigned in the KORG KONTROL Editor
# Note: Multiple line formatting and Variables not supported below

# Track FX selection

TRACK_1_FX_1 = CC, 1, 22, 0, 127, FALSE
TRACK_1_FX_1 RELEASED = WAIT 1; $FX_1_1$

TRACK_1_FX_2 = CC, 1, 30, 0, 127, FALSE
TRACK_1_FX_2 RELEASED = WAIT 1; $FX_1_2$

TRACK_1_FX_3 = CC, 1, 39, 0, 127, FALSE
TRACK_1_FX_3 RELEASED = WAIT 1; $FX_1_3$

TRACK_4_FX_1 = CC, 1, 23, 0, 127, FALSE
TRACK_4_FX_1 RELEASED = WAIT 1; $FX_4_1$

TRACK_4_FX_2 = CC, 1, 31, 0, 127, FALSE
TRACK_4_FX_2 RELEASED = WAIT 1; $FX_4_2$

TRACK_4_FX_3 = CC, 1, 40, 0, 127, FALSE
TRACK_4_FX_3 RELEASED = WAIT 1; $FX_4_3$

# Track selection
# Additional select actions and LED feedback are handled by user_actions/SelectedTrackLedStates.py

# 1. visually select the track and its accompanying FX track by illuminating their Select buttons
# 2. programmatically select a track in Live to set the target for the loop controls
# 3. programmatically select a deck in Traktor to set the target for the loop controls and keyboard pitching
#    (via the same CC being mapped to the deck in Traktor)
# 4. programmatically select a deck in Traktor to set the target for keyboard pitching when a Live track is selected and recording
#    The same buttons are mapped in Traktor on channel 16:
#    CC, 16, 46 is mapped to Deck A select
#    CC, 16, 49 is mapped to Deck B select
#    CC, 16, 50 is mapped to Deck D select
#    These MIDI CCs are triggered via a user_action which is called by X_CLIP_REC in X-Controls, when recording starts and stops.
#    This ensures that melodic deck control is possible during sampling into Live
#    TODO full control may require duplicating the modifier system from the nanoKONTROL TSI to the Programmatic TSI (#17)

SELECT_1 = CC, 1, 46, 0, 127, FALSE
SELECT_1 RELEASED = 1/SEL; WAIT 1; $LEDS_1$; $INPUT_DECK_A$

SELECT_2 = CC, 1, 47, 0, 127, FALSE
SELECT_2 RELEASED = 1/SEL; WAIT 1; $LEDS_2$; $INPUT_DECK_A$

SELECT_3 = CC, 1, 48, 0, 127, FALSE
SELECT_3 RELEASED = 4/SEL; WAIT 1; $LEDS_3$; $INPUT_DECK_B$

SELECT_4 = CC, 1, 49, 0, 127, FALSE
SELECT_4 RELEASED = 4/SEL; WAIT 1; $LEDS_4$; $INPUT_DECK_B$

SELECT_5 = CC, 1, 50, 0, 127, FALSE
SELECT_5 RELEASED = 5/SEL; WAIT 1; $LEDS_5$

SELECT_6 = CC, 1, 51, 0, 127, FALSE
SELECT_6 RELEASED = 6/SEL; WAIT 1; $LEDS_6$

SELECT_7 = CC, 1, 52, 0, 127, FALSE
SELECT_7 RELEASED = 7/SEL; WAIT 1; $LEDS_7$

SELECT_8 = CC, 1, 53, 0, 127, FALSE
SELECT_8 RELEASED = 8/SEL; WAIT 1; $LEDS_8$