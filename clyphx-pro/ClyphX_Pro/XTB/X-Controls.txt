#********************************** [SETTINGS NOTES] **********************************

# Please DO NOT change any of the spacing in this file.

# Please DO NOT change the name of this file or its file extension.  When done making
# your changes to the settings below, just save the file.

# After saving this file, you will need to load a new Live Set/reload the
# current Live Set for your changes to take effect.



# --------------------------------------------------------------------------------------

[X-CONTROLS]

# Below, you can specify a list of MIDI Controls to use as X-Controls.

# The entry format is: NAME = TYPE, CHANNEL, NOTE_OR_CC, OFF_LED, ON_LED, ON_ACTION_LIST

# --------------------------------------------------------------------------------------
# | ENTRY          |  DESCRIPTION
# --------------------------------------------------------------------------------------
# | NAME           |  A unique one-word name for the control.
# --------------------------------------------------------------------------------------
# | TYPE           |  The type of MIDI message the control sends (NOTE or CC).
# --------------------------------------------------------------------------------------
# | CHANNEL        |  The MIDI Channel number in the range of 1-16
# --------------------------------------------------------------------------------------
# | NOTE_OR_CC     |  The Note or CC number in the range of 0-127.
# --------------------------------------------------------------------------------------
# | OFF_LED        |  The LED value in the range of 0-127 to use by default and when the
# |                |  control sends an off message. If in doubt, use 0.
# --------------------------------------------------------------------------------------
# | ON_LED         |  The LED value in the range of 0-127 to use when the control sends
# |                |  an on message. If in doubt, use 127.
# --------------------------------------------------------------------------------------
# | ON_ACTION_LIST |  The Action List to trigger when the control sends an on message.
# --------------------------------------------------------------------------------------

# Example: MY_BTN1 = NOTE, 1, 10, 0, 127, 1/MUTE ; 2/MUTE

# You can optionally specify an Action List to trigger when the control sends an off
# message. To do this, place a colon after the On Action List and then specify the
# Off Action List.

# Example: MY_BTN2 = CC, 16, 117, 0, 127, 1/MUTE ; 2/MUTE : 3/PLAY >

# To trigger the same Action List for the On Action List and Off Action List, just specify
# an asterisk for the Off Action List.

# Example: MY_BTN3 = NOTE, 5, 0, 0, 127, 1/MUTE : *

# --------------------------------------------------------------------------------------

# Below is an example list that has been commented out (the # at the beginning of
# a line makes the line a comment). Your list should be formatted in the same way
# except without the # at the beginning of each line.

# BTN_1 = NOTE, 1, 0, 0, 127, MUTE : *

# BTN_2 = NOTE, 1, 1, 25, 15, SOLO

# BTN_3 = CC, 9, 2, 127, 0, ARM

# When using long Action Lists, it's possible to split the Action List up over multiple
# lines.  This requires that each additional line is indented by 1 space.

# BTN_4 = CC, 9, 3, 1, 5,
#  MON;
#  ARM;
#  NAME "My Track"

# --------------------------------------------------------------------------------------

# Traktor TSI v3.0 - XTB (KORG nanoKONTROL Studio) - X-Controls
# An X-Control is a control on a MIDI controller.
# CC numbers reference those assigned in the KORG KONTROL Editor

# Rec button
# 'arm' is also in Button Bindings.txt
# when the command below is commented out, the LED feedback works, but the record action does not
# see https://forum.nativekontrol.com/thread/4416/button-binding-control-trigger-action
# MIDIB Channel 16 sends to the XTB output (Traktor Virtual Input)
LOOP_REC = CC, 1, 81, 0, 127, $LOOP_RECORD$

# Set button
# LED feedback is handled by user_actions/SelectedTrackLedStates.py
LOOP = CC, 1, 55, 0, 127, $LOOP$

# Play button
LOOP_PLAY = CC, 1, 80, 0, 127, $LOOP_PLAY$

# Stop button
LOOP_STOP = CC, 1, 63, 0, 0, $LOOP_STOP$

# Left and right arrows on first row of buttons
LOOP_SIZE_LEFT = CC, 1, 56, 0, 127, $LOOP_HALVE$
LOOP_SIZE_RIGHT = CC, 1, 57, 0, 127, $LOOP_DOUBLE$

# FFWD and RWD arrows on second row of buttons
LOOP_MOVE_LEFT = CC, 1, 58, 0, 127, $LOOP_LEFT$
LOOP_MOVE_RIGHT = CC, 1, 59, 0, 127, $LOOP_RIGHT$

# Left and right arrows on second row of buttons
LOOP_NUDGE_LEFT = CC, 1, 60, 0, 127, $LOOP_NUDGE_LEFT$
LOOP_NUDGE_RIGHT = CC, 1, 61, 0, 127, $LOOP_NUDGE_RIGHT$

# Back-to-start button
# Trigger shift on when pressed and shift off when released
SHIFT_BUTTON = CC, 1, 62, 0, 127, shift on : shift off